AWSTemplateFormatVersion: '2010-09-09'
Description: Setup an static Application Load Balancer
Parameters:
  LoadBalancerName:
    Description: Name of the load balancer
    Type: String
  Subnets:
    Description: The subnets which the ELB is hosted.
    Type: CommaDelimitedList
  VpcID:
    Description: Id of the VPC
    Type: String
    AllowedPattern: vpc-[a-f0-9]{8}
  Scheme:
    Description: scheme of ELB
    Type: String
    Default: internet-facing
  HealthCheckPath:
    Type: String
    Description: path of health check
  TargetGroupName:
    Type: String
    Description: name of TargetGroup
  VpcCidr:
    Type: String
    Description: name of TargetGroup
  SslCertificate:
    Type: String
    Description: Ssl Certificate Arn

Resources:
  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: !Join ['', ['SecurityGroup of', '-', !Ref 'LoadBalancerName']]
      SecurityGroupIngress:
      - CidrIp: 0.0.0.0/0
        IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        Description: 'HTTP-ALB-Port'
      - CidrIp: 0.0.0.0/0
        IpProtocol: tcp
        FromPort: 443
        ToPort: 443
        Description: 'HTTPS-ALB-Port'
      - IpProtocol: tcp
        FromPort: '81'
        ToPort: '90'
        CidrIp: !Ref 'VpcCidr'
        Description: 'Test-ALB-Port'
      VpcId: !Ref 'VpcID'

  LoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name:
        Ref: LoadBalancerName
      Scheme:
        Ref: Scheme
      Subnets:
        Ref: Subnets
      SecurityGroups:
        - Ref: SecurityGroup
      Tags:
      - Key: name
        Value:  !Ref 'LoadBalancerName'

  ALBListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
      - Type: forward
        TargetGroupArn:
          Ref: TargetGroup
      LoadBalancerArn: !Ref LoadBalancer
      Port: '80'
      Protocol: HTTP
  ALBSslListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
      - Type: forward
        TargetGroupArn: !Ref TargetGroup
      LoadBalancerArn: !Ref LoadBalancer
      Port: 443
      Protocol: HTTPS
      Certificates:
      - CertificateArn: !Ref SslCertificate

  TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 10
      HealthCheckPath:
        Ref: HealthCheckPath
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 5
      Name:
        Ref: TargetGroupName
      Port: 80
      Protocol: HTTP
      UnhealthyThresholdCount: 3
      VpcId:
        Ref: VpcID
      TargetGroupAttributes:
        - Key: deregistration_delay.timeout_seconds
          Value: 60

Outputs:
  ELBEndpoint:
    Description: ALB dns name.
    Value: !GetAtt [LoadBalancer, DNSName]
